package ReverseStringVedio150;

public class ReverseDemoP01 {
    public static void main(String[] args) {
        String s = "madam";

        for (int i = s.length() -1; i >= 0 ; i--) {
           // System.out.println(s);
            System.out.println(s.charAt(i));
        }

    }
}
/*
public class ReverseDemoP01 { // একটি নতুন ক্লাস তৈরি করা হয়েছে যার নাম 'ReverseDemoP01'
    public static void main(String[] args) { // প্রধান মেথড 'main' যেখানে প্রোগ্রামটি শুরু হয়
        String s = "madam"; // একটি স্ট্রিং ভেরিয়েবল 's' তৈরি করা হয়েছে এবং সেটি "madam" মান দিয়ে initialize করা হয়েছে

        for (int i = s.length() - 1; i >= 0; i--) { // একটি 'for' লুপ যা স্ট্রিং 's' এর প্রতিটি ক্যারেক্টার উল্টো দিক থেকে প্রিন্ট করবে
            System.out.println(s.charAt(i)); // স্ট্রিং 's' এর 'i' তম ক্যারেক্টার প্রিন্ট করা হচ্ছে
        }

    }
}
বিস্তারিত ব্যাখ্যা:
প্রথম লাইন:

java
Copy code
public class ReverseDemoP01 {
কাজ: একটি নতুন ক্লাস ReverseDemoP01 তৈরি করা হয়েছে।
কেন: Java প্রোগ্রামে সবকিছু একটি ক্লাসের মধ্যে রাখতে হয়। এই ক্লাসের মধ্যে আমরা আমাদের প্রোগ্রামটি লিখবো।
দ্বিতীয় লাইন:

java
Copy code
public static void main(String[] args) {
কাজ: প্রধান মেথড main ঘোষণা করা হয়েছে, যেখানে প্রোগ্রামটি শুরু হয়।
কেন: প্রতিটি Java প্রোগ্রামের জন্য একটি প্রধান মেথড প্রয়োজন যা প্রোগ্রামটি চালানোর জন্য প্রবেশ স্থান (entry point)।
তৃতীয় লাইন:

java
Copy code
String s = "madam";
কাজ: একটি স্ট্রিং ভেরিয়েবল s তৈরি করা হয়েছে এবং সেটি "madam" মান দিয়ে initialize করা হয়েছে।
কেন: আমাদের একটি স্ট্রিং দরকার যা আমরা উল্টানো ক্রমে প্রিন্ট করবো।
চতুর্থ লাইন:

java
Copy code
for (int i = s.length() - 1; i >= 0; i--) {
কাজ: একটি for লুপ শুরু হয়েছে যা স্ট্রিং s এর প্রতিটি ক্যারেক্টার উল্টো দিক থেকে প্রিন্ট করবে।
Initialization (int i = s.length() - 1): লুপের ভেরিয়েবল i স্ট্রিং s এর শেষ ক্যারেক্টারের ইন্ডেক্স দিয়ে শুরু হয়।
Condition (i >= 0): লুপটি চলতে থাকবে যতক্ষণ i এর মান ০ বা তার বেশি থাকে।
Decrement (i--): প্রতিবার লুপটি চলার পর i এর মান ১ করে কমানো হয়।
পঞ্চম লাইন:

java
Copy code
System.out.println(s.charAt(i));
কাজ: স্ট্রিং s এর বর্তমান ক্যারেক্টার i ইনডেক্স থেকে নেয়া হচ্ছে এবং এটি প্রিন্ট করা হচ্ছে।
কেন: আমরা স্ট্রিং s এর প্রতিটি ক্যারেক্টার উল্টো ক্রমে প্রিন্ট করতে চাই।
কোডের সারাংশ:
প্রথমে, আমরা s নামের একটি স্ট্রিং তৈরি করেছি যার মান "madam"।
তারপর, একটি for লুপ ব্যবহার করে স্ট্রিং s এর প্রতিটি ক্যারেক্টার উল্টো দিক থেকে প্রিন্ট করছি।
লুপটি s.length() - 1 (স্ট্রিং এর শেষ ক্যারেক্টার) থেকে শুরু হয় এবং ০ পর্যন্ত চলে।
প্রতিবার লুপ চলার সময়, s.charAt(i) ব্যবহার করে i তম ক্যারেক্টারটি প্রিন্ট করা হয়।
উদাহরণ:
এই কোডটি চালালে আউটপুট হবে:

css
Copy code
m
a
d
a
m
এভাবে, স্ট্রিং "madam" এর প্রতিটি ক্যারেক্টার উল্টো ক্রমে (শেষ থেকে প্রথম পর্যন্ত) এক এক করে প্রিন্ট হবে।







 */
